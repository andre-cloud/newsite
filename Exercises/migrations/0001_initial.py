# Generated by Django 3.1.1 on 2020-10-29 09:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Inserire un titolo esplicativo', max_length=120)),
                ('text', models.TextField(help_text='Scrivere il testo del problema. Se si è utilizzato il bot che sfrutta la tecnologia OCR controllare la correttezza del teso ricevuto.')),
                ('fig', models.ImageField(blank=True, help_text="Carica un'eventuale immagine che completi il testo dell'esercizio", null=True, upload_to='img/')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('referance', models.TextField(help_text='Se è un libro: Cognome N., Titolo del testo, Casa editrice, anno di pubblicazione con edizione, pagina. Se è un sito inserire il link')),
                ('status', models.CharField(default='Draft', editable=False, max_length=10)),
                ('slug', models.SlugField(help_text='NON MODIFICARE')),
            ],
            options={
                'verbose_name': 'Esercizio',
                'verbose_name_plural': 'Esercizi',
            },
        ),
        migrations.CreateModel(
            name='Chimica_Fisica',
            fields=[
                ('exercise_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercises.exercise')),
                ('argomento', models.CharField(choices=[('GAS', '1. Teorie dei gas'), ('THD', '2. Termodinamica'), ('THC', '3. Termochimica'), ('KIN', '4. Cinetica chimica'), ('ELE', '5. Elettrodi')], help_text="Selezionare l'argomento di appartenenza dell'esercizio", max_length=3)),
                ('sistema', models.TextField(blank=True, help_text='Scrivere qui le varie equazioni utilizzate per risolvere il problema. Possibilmente numerarle.')),
                ('grafico', models.ImageField(blank=True, help_text="Caricare un file .png/.svg/.jpeg contenente l'eventuale grafico necessario.", upload_to='graphs')),
                ('commento', models.TextField(help_text='Commentare il processo mentale che ha portato alla scrittura delle varie equazioni utilizzate facendo rifermento.')),
                ('risultato', models.TextField(help_text='Evidenziare il risultato ottenuto dalla risoluzione delle equazioni.')),
            ],
            options={
                'verbose_name': 'Chimica Fisica',
                'verbose_name_plural': 'Chimica Fisica',
            },
            bases=('Exercises.exercise',),
        ),
        migrations.CreateModel(
            name='Chimica_Generale_Analitica',
            fields=[
                ('exercise_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercises.exercise')),
                ('argomento', models.CharField(choices=[('INT', '0. Nomenclatura e Cifre significative'), ('STE', '1. Stechiometria'), ('ATM', '2. Teoria atomica e Proprietà periodiche'), ('REA', '3. Reazioni chimiche'), ('PTH', '4. Principi di termochimica'), ('BON', '5. Legami chimici'), ('SOL', '6. Soluzioni e concentrazioni'), ('COL', '7. Proprietà colligative'), ('ACB', '8. Teorie del pH e tamponi'), ('RED', '9. Reazioni redox')], help_text="Selezionare l'argomento di appartenenza dell'esercizio", max_length=3)),
                ('sistema', models.TextField(help_text='Scrivere qui le varie equazioni utilizzate per risolvere il problema. Possibilmente numerarle.')),
                ('commento', models.TextField(help_text='Commentare il processo mentale che ha portato alla scrittura delle varie equazioni utilizzate facendo rifermento.')),
                ('risultato', models.TextField(help_text='Evidenziare il risultato ottenuto dalla risoluzione delle equazioni.')),
            ],
            options={
                'verbose_name': 'Chimica Generale ed Analitica',
                'verbose_name_plural': 'Chimica Generale ed Analitica',
            },
            bases=('Exercises.exercise',),
        ),
        migrations.CreateModel(
            name='Chimica_Organica',
            fields=[
                ('exercise_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercises.exercise')),
                ('argomento', models.CharField(choices=[('CAN', '1. Alcani'), ('CHE', '2. Alcheni'), ('CHI', '3. Alchini'), ('PHS', '4. Aromatici'), ('ALO', '5. Alogenoderivati'), ('ALC', '5. Alcoli e Tioli'), ('AMM', '6. Ammine'), ('RCO', '7. Carbonile'), ('SIN', '8. Sintesi')], help_text="Selezionare l'argomento di appartenenza dell'esercizio", max_length=3)),
                ('strutture', models.ImageField(help_text='Caricare un file .png/.svg/.jpeg contenente lo schema della reazione', upload_to='str/')),
                ('meccanismo', models.ImageField(blank=True, help_text="Caricare un file .png/.svg/.jpeg contenente lo schema dell'eventuale meccanismo di reazione", upload_to='mech/')),
                ('commento', models.TextField(help_text='Commentare il processo mentale che ha portato alla scelta di ciò che è stato caricato come "struttura" e nell\'eventuale meccanismo.')),
            ],
            options={
                'verbose_name': 'Chimica Organica',
                'verbose_name_plural': 'Chimica Organica',
            },
            bases=('Exercises.exercise',),
        ),
        migrations.CreateModel(
            name='Matematica',
            fields=[
                ('exercise_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exercises.exercise')),
                ('argomento', models.CharField(choices=[('NRE', '1. Numeri reali'), ('COM', '2. Numeri complessi'), ('EUC', '3. Lo spazio euclideo \\(R^n\\)'), ('TOP', '4. Topologia di \\(R^n\\)'), ('ASI', '5. Confronto asintotico'), ('SER', '6. Serie'), ('SEP', '7. Serie di potenze'), ('DER', '8. Derivate'), ('FEL', '9. Funzioni elemntari'), ('ACO', '10. Argomento di un numero complesso'), ('INT', '11. Primitive ed integrali'), ('SSE', '12. Sviluppi in serie'), ('INI', '13. Integrali impropi')], help_text="Selezionare l'argomento di appartenenza dell'esercizio", max_length=3)),
                ('grafico', models.ImageField(blank=True, help_text="Caricare un file .png/.svg/.jpeg contenente l'eventuale grafico necessario per la dimostrazione", upload_to='graphs')),
                ('dim', models.TextField(help_text="Scrivere la dimostrazione per risolvere il problema. È pensato anche come entry per definire l'eventuale sistema di equazioni per risolvere il problema.")),
                ('commento', models.TextField(help_text='Commentare il processo mentale che ha portato alla scelta di ciò che è stato caricato come "struttura" e nell\'eventuale meccanismo.')),
                ('risultato', models.TextField(blank=True, help_text='Evidenziare il risultato ottenuto dalla risoluzione delle equazioni.')),
            ],
            options={
                'verbose_name': 'Matematica',
                'verbose_name_plural': 'Matematica',
            },
            bases=('Exercises.exercise',),
        ),
    ]
